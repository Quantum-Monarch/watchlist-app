# Generated by Django 5.2.3 on 2025-07-16 17:21

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('release_year', models.IntegerField(default=1999)),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('genre', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), default=list, size=None)),
                ('production_company', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), default=list, null=True, size=None)),
                ('tmdb_rating', models.IntegerField(blank=True, default=0, null=True)),
                ('main_vector', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('poster_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserList',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ispublic', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('main_vector', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('film_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='watchlist.film')),
                ('movie_length', models.IntegerField(default=0)),
            ],
            bases=('watchlist.film',),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('film_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='watchlist.film')),
                ('number_of_seasons', models.IntegerField(default=2)),
                ('number_of_episodes', models.IntegerField(default=20)),
                ('next_release_date', models.CharField(choices=[('unknown', 'to be determined'), ('completed', 'finished airing')], default='unknown', max_length=100)),
            ],
            bases=('watchlist.film',),
        ),
        migrations.CreateModel(
            name='UserListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('null', 'not set'), ('plan', 'planned to watch'), ('watched', 'watched'), ('watching', 'watching')], default='null', max_length=100)),
                ('rating', models.FloatField(default=0.0)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('current_episode', models.IntegerField(blank=True, default=0, null=True)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.film')),
                ('userlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='watchlist.userlist')),
            ],
        ),
    ]
